[buildout]
develop = .

sphinx_extras =
versions = versions

extensions +=
    mr.developer

sources-dir = checkouts
auto-checkout = *


[babel]
recipe = zc.recipe.egg
interpreter = i18npy
eggs = ${buildout:package-name} ${buildout:package-extras}
       Babel
       lingua
       polib


[i18ndude]
recipe = zc.recipe.egg
eggs = i18ndude


[rebuild_docs-sh]
recipe = collective.recipe.template
input = inline:
    #!/bin/bash
    cd docs/build
    rm -rf doctrees
    rm -rf html
    make html
    cd ../..
output = ${buildout:directory}/bin/rebuild_docs.sh
mode = 755


[rebuild_i18n-sh]
recipe = collective.recipe.template
output = ${buildout:directory}/bin/rebuild_i18n.sh
mode = 755
input = inline:
    #! /bin/sh
    # see http://maurits.vanrees.org/weblog/archive/2010/10/i18n-plone-4 for more information

    I18NDOMAIN="${buildout:package-name}"

    # find the locales dir
    LOCALES=`find . -type d | grep "${buildout:package-name}" | grep -m 1 "locales"`
    SOURCE=`dirname $LOCALES`;

    # rebuild pot file for package's domain and merge it with any manual translations needed
    bin/i18ndude rebuild-pot --pot $LOCALES/$I18NDOMAIN.pot --create $I18NDOMAIN $SOURCE
    bin/i18ndude merge --pot $LOCALES/$I18NDOMAIN.pot --merge $LOCALES/manual.pot

    # synchronise translations for package's domain
    for po in $LOCALES/*/LC_MESSAGES/$I18NDOMAIN.po; do
        bin/i18ndude sync --pot $LOCALES/$I18NDOMAIN.pot $po
    done


[rebuild_i18n_babel-sh]
recipe = collective.recipe.template
output = ${buildout:directory}/bin/rebuild_i18n.sh
mode = 755
input = inline:
    #! /bin/sh

    I18NDOMAIN="${buildout:package-name}"

    # Find the locales dir.
    LOCALES=`find . -type d | grep "${buildout:package-name}" | grep -m 1 "locale"`
    SOURCE=`dirname $LOCALES`;

    # Use babel to extract the messages.
    bin/i18npy setup.py extract_messages

    # Synchronise english "translations" for package's domain.
    ./bin/i18npy setup.py update_catalog -l en


[releaser]
recipe = zc.recipe.egg:scripts
dependent-scripts = true
eggs =
    zest.releaser[recommended]
    spirit.releaser
    ${buildout:package-name}


[sphinxbuilder]
recipe = collective.recipe.sphinxbuilder
eggs =
    ${buildout:package-name}
    sphinx_rtd_theme
    ${buildout:sphinx_extras}
source = ${buildout:directory}/docs/source
build = ${buildout:directory}/docs/build


[sources]
lingua = git https://github.com/tmassman/lingua


[versions]
babel = 2.3.4
Sphinx = 1.6.5
collective.recipe.sphinxbuilder = 1.0
docutils = 0.14
flake8 = 3.3.0
flake8-blind-except = 0.1.1
flake8-coding = 1.3.0
flake8-debugger = 1.4.0
flake8-deprecated = 1.1
flake8-isort = 2.2.2
flake8-pep3101 = 1.0
flake8-plone-api = 1.2
flake8-plone-hasattr = 0.1
flake8-polyfill = 1.0.1
flake8-print = 2.0.2
flake8-quotes = 0.9.0
flake8-string-format = 0.2.3
flake8-todo = 0.7
isort = 4.2.5
mr.developer =
# With plone.i18n 3.0.7 Plone itself is adependency.
plone.i18n = 3.0.6
pkginfo = 1.4.1
pygments = 2.2.0
pyroma = 2.2
readme-renderer = 17.2
robotframework-selenium2screenshots = 0.7.2
spirit.releaser =
setuptools =
sphinx-rtd-theme = 0.2.4
zc.buildout =
zc.recipe.cmmi = 1.3.6
zc.recipe.testrunner = 2.0.0
zest.releaser = 6.12.5
